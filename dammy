#!/bin/bash

set -Ceu

SCRIPT_FILE_NAME=$(basename $0)
SCRIPT_NAME=${SCRIPT_FILE_NAME%.*}
SELF=$(cd $(dirname $0); pwd)
LOGGING=false
VERSION="1.0.1"
SEPARATER='---------------------------'

function _usage() {
    echo "Usage: ${SCRIPT_NAME} [OPTIONS] [DESTNATION]..."
    echo "  This script creates various files."
    echo
    echo "Options:"
    echo "  -h, --help                     Show help."
    echo "  -v, --version                  Show script version."
#    echo "  -a, --long-a ARG               Option which must have argument."
#    echo "  -b, --long-b [ARG]             Either with or without argument is possible."
    echo "  -n, --number                   Specify the number of files to create."
    echo "  -e, --ext                      Specify the extension of the file to be created."
    echo "      --verbose                  Print various logging information"
    echo
    echo "Example"
    echo "  dammy -n 3 -e jpg              Generate three **.jpg in current directory."
    echo "  dammy -e jpg xx/yy             Create ./xx/yy directory and generate a **.jpg"
    echo "                                 in ./xx/yy dir.."
    echo "  dammy xx/yy{00..02}            Create ./xx/yy01, ./xx/yy02 and ./xx/yy02 directory"
    echo "                                 and then generate **.txt in each dir. created."
    exit 0
}

function _log() {
    ${LOGGING} && echo "$@" || return 0
}

function _err() {
    echo "[err] $1" && exit 1
}

function _args_count() {
    echo ${#ARG_VALUES[@]}
}

function _is_exist() {
    [ -f $1 ] || [ -d $1 ] || [[ $(type $1) ]]
}

# -------------------------------------------------------------

function _verbose() {
    #_log "ARG_VALUES: ${ARG_VALUES[@]}"
    _log "DIRS: ${DIRS[@]}"
    _log "OUT_FILE_EXT: ${OUT_FILE_EXT}"
    _log "OUT_FILE_NUMBER: ${OUT_FILE_NUMBER}"
    _log "IS_COLD_RUN: ${IS_COLD_RUN}"
    _log "${SEPARATER}"
}

ARG_VALUES=()
DIRS=()
OUT_FILE_EXT='txt'
OUT_FILE_NUMBER=1
#OPT_B=""
IS_COLD_RUN=false

function _main() {
    for dir in ${DIRS[@]}; do
        while read -r file; do
            echo "${dir}/${file}.${OUT_FILE_EXT}"
            ${IS_COLD_RUN} || {
                [ ! -e ${dir} ] && mkdir -p ${dir}
                touch ${dir}/${file}.${OUT_FILE_EXT}
            }
        done < <(dazai -n ${OUT_FILE_NUMBER} han -d '\n' -l 8 --no-symbol)
    done
}

# -------------------------------------------------------------

function _analyse_args_and_options() {
    while (( $# > 0 )); do
        case $1 in
            -h | --help)
                _usage
                exit 1
                ;;
            -v | --version)
                echo ${SCRIPT_NAME} v${VERSION}
                exit 0
                ;;
            --verbose)
                LOGGING=true
                shift
                ;;

            # Must have argument
            -n | --number)
                set +u
                if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                    _err "-n option requires n value."
                fi
                set -u
                OUT_FILE_NUMBER=$2
                shift 2
                ;;

            # Must have argument
            -e | --ext)
                set +u
                    if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                        _err "-e option requires a value."
                    fi
                set -u
                OUT_FILE_EXT=$2
                shift 2
                ;;

#            # Either with or without argument is possible
#            -b | --long-b)
#                set +u
#                if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
#                    shift
#                else
#                    OPT_B=$2
#                    shift 2
#                fi
#                set -u
#                ;;

#            # no argument
#            -c | --long-c)
#                shift 1
#                ;;

            # after this all args include '-xx', will treat arg value
            -- | -)
                shift 1
                ARG_VALUES+=( "$@" )
                break
                ;;

            # for true or false flags, no argument
            --*)
                if [[ "$1" =~ 'cold-run' ]]; then
                    IS_COLD_RUN='true'
                fi
                shift
                ;;

#            # for true or false flags, no argument
#            -*)
#                if [[ "$1" =~ 'p' ]]; then
#                    IS_FLAG_P='true'
#                fi
#                shift
#                ;;

            # arguments
            *)
                ARG_VALUES+=("$1")
                shift
                ;;
        esac
    done
}

function _set_static_var() {
    [ ${#ARG_VALUES[@]} -ne 0 ] && {
        DIRS=($(echo ${ARG_VALUES[@]} | sed 's:/$::'))
    } || {
        DIRS=('.')
    }
}

function _verify_static_var() {
    :
}

# -------------------------------------------------------------
# Main Routine
# -------------------------------------------------------------
_analyse_args_and_options $@ && {
    _set_static_var && _verify_static_var && {
        _verbose
        _log 'start main process..' && _log "${SEPARATER}"
        _main
    }
}
exit 0

