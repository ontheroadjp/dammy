"use strict";(self.webpackChunkdammy=self.webpackChunkdammy||[]).push([[76],{1462:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-6af80077",path:"/ja/overview/",title:"概要",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"dammy とは？",slug:"dammy-とは",children:[]},{level:2,title:"主な機能",slug:"主な機能",children:[]},{level:2,title:"例えば・・・",slug:"例えば・・・",children:[]}],filePathRelative:"ja/overview/README.md",git:{updatedTime:1637731809e3,contributors:[{name:"ontheroadjp",email:"dev@ontheroad.jp",commits:1}]}}},4194:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="概要" tabindex="-1"><a class="header-anchor" href="#概要" aria-hidden="true">#</a> 概要</h1><h2 id="dammy-とは" tabindex="-1"><a class="header-anchor" href="#dammy-とは" aria-hidden="true">#</a> dammy とは？</h2><p>このシェルスクリプトはディレクトリツリーを構築します。 このスクリプトを利用すれば <code>mkdir</code> や <code>touch</code> などのコマンドを駆使して、ディレクトリツリーを構築する必要はありません。 ディレクトリからファイルやディレクトリを読み込むようなシステム開発においては、テスト用のディレクトリツリーを構築する手間を大きく軽減することが可能です。</p><h2 id="主な機能" tabindex="-1"><a class="header-anchor" href="#主な機能" aria-hidden="true">#</a> 主な機能</h2><ul><li>多階層のディレクトリ作成</li><li>作成したディレクトリの中へファイルの作成</li><li>作成するファイルは、記号や空白を含むことも可能</li></ul><h2 id="例えば・・・" tabindex="-1"><a class="header-anchor" href="#例えば・・・" aria-hidden="true">#</a> 例えば・・・</h2><p>このコマンドを実行するだけで、</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dammy hoge/<span class="token punctuation">{</span>foo,bar<span class="token punctuation">}</span>/piyo -n <span class="token number">3</span> --each --with-whitespace\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>以下のようなディレクトリツリーが構築されます。</p><p><code>hoge</code> ディレクトリの中に <code>foo</code> ディレクトリを作成し、さらに <code>foo</code> ディレクトリの下に <code>piyo</code> ディレクトリを作成。</p><p>そして作成したディレクトリそれぞれに、3つづつの空白/記号入りファイル名のファイルを作成しています。</p><p>同時に、bash のブレース展開を使い、<code>hoge</code> ディレクトリの中に <code>bar</code> ディレクトリ、その下に <code>piyo</code> ディレクトリを作成し、同様に 3つづつの空白/記号入りファイル名のファイルを作成しています。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>hoge\n├── <span class="token punctuation">)</span> R a Y A .txt\n├── H t <span class="token number">8</span> <span class="token number">9</span> h .txt\n├── <span class="token punctuation">\\</span> U X , <span class="token operator">!</span> .txt\n├── bar\n│   ├── <span class="token operator">!</span> + w <span class="token number">2</span> q .txt\n│   ├── , <span class="token punctuation">)</span> R <span class="token punctuation">;</span> c .txt\n│   ├── d P <span class="token number">9</span> <span class="token number">6</span> i .txt\n│   └── piyo\n│       ├── % U <span class="token number">2</span> P L .txt\n│       ├── <span class="token number">5</span> R J j c .txt\n│       └── O S <span class="token builtin class-name">:</span> <span class="token number">3</span> E .txt\n├── d M <span class="token number">6</span> <span class="token number">2</span> x .txt\n├── foo\n│   ├── $ A P H _ .txt\n│   ├── J Z d &#39; a .txt\n│   ├── i W S _ <span class="token number">1</span> .txt\n│   └── piyo\n│       ├── <span class="token builtin class-name">:</span> L w <span class="token operator">&amp;</span> I .txt\n│       ├── A e @ j <span class="token operator">&amp;</span> .txt\n│       └── r W <span class="token number">2</span> * <span class="token punctuation">(</span> .txt\n├── <span class="token function">v</span> @ R q j .txt\n└── y g R , <span class="token number">9</span> .txt\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>',13),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);